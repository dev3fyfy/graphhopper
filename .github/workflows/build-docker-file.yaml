on:
  push:
    branches:
      - master

name: Build DockerFile


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # - uses: actions/cache@v2
      #   with:
      #     path: ~/.m2
      #     key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-maven-
      # - name: Get mvn modules
      #   run: |
      #     ./mvnw dependency:resolve-plugins dependency:resolve dependency:go-offline

      # - name: Copy artifacts
      #   run: |
      #     cp -R ~/.m2 ./m2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REPOSITORY: location-healing
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t location-healing:$IMAGE_TAG .
          # docker push location-healing:$IMAGE_TAG
          echo "::set-output name=image::location-healing:$IMAGE_TAG"

